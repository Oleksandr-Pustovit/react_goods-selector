{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["takeGoodsFromServer","goods","map","el","name","App","state","goodsFromServer","selectedGoods","handleRemove","setState","prevState","previousGood","index","indexOf","splice","handleSelect","previousSelectedGoods","includes","push","getSelectedGoods","selected","length","Error","this","className","Boolean","Button","variant","type","classNames","onClick","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iQAAe,G,YAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCCF,SAASA,EAAoBC,GAC3B,OAAOA,EAAMC,KAAI,SAACC,GAAD,MAAiB,CAAEC,KAAMD,MAQrC,IAAME,EAAb,4MACEC,MAAQ,CACNL,MAAOD,EAAoBO,GAC3BC,cAAe,CAAC,QAHpB,EAMEC,aAAe,SAACL,GACd,EAAKM,UAAS,SAACC,GACb,IAAMC,EAAY,YAAOD,EAAUH,eAC7BK,EAAQD,EAAaE,QAAQV,GAMnC,OAJe,IAAXS,GACFD,EAAaG,OAAOF,EAAO,GAGtB,CAAEL,cAAeI,OAf9B,EAmBEI,aAAe,SAACZ,GACd,EAAKM,UAAS,SAACC,GACb,IAAMM,EAAqB,YAAON,EAAUH,eAM5C,OAJKS,EAAsBC,SAASd,IAClCa,EAAsBE,KAAKf,GAGtB,CAAEI,cAAeS,OA3B9B,EA+BEG,iBAAmB,SAACC,GAClB,QAAQ,GACN,KAAKA,EAASC,OAAS,EACrB,MAAM,GAAN,OAAUD,EAAS,GAAnB,aAA0BA,EAAS,GAAnC,gBAA6CA,EAASC,OAAS,EAA/D,wBAEF,KAAyB,IAApBD,EAASC,OACZ,MAAM,GAAN,OAAUD,EAAS,GAAnB,aAA0BA,EAAS,GAAnC,gBAA6CA,EAAS,GAAtD,iBAEF,KAAyB,IAApBA,EAASC,OACZ,MAAM,GAAN,OAAUD,EAAS,GAAnB,gBAA6BA,EAAS,GAAtC,iBAEF,KAAyB,IAApBA,EAASC,OACZ,MAAM,GAAN,OAAUD,EAAS,GAAnB,gBAEF,KAAyB,IAApBA,EAASC,OACZ,MAEF,QACE,MAAM,IAAIC,MAAM,wCAGpB,MAAO,qBApDX,4CAuDE,WAAU,IAAD,OACP,EAAiCC,KAAKlB,MAA9BL,EAAR,EAAQA,MAAOO,EAAf,EAAeA,cAEf,OACE,uBAAMiB,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKJ,iBAAiBZ,KAGxBkB,QAAQlB,EAAcc,SACrB,cAACK,EAAA,EAAD,CACEC,QAAQ,SACRC,KAAK,SACLJ,UAAWK,IACT,cAEFC,QAAS,kBAAM,EAAKrB,SAAS,CAAEF,cAAe,MANhD,sBAaJ,oBAAIiB,UAAU,YAAd,SACGxB,EAAMC,KAAI,SAAA8B,GAAI,OACb,qBAEEP,UAAWK,IACT,OACA,CACE,eAAgBtB,EAAcU,SAASc,EAAK5B,QALlD,UASG4B,EAAK5B,KAELI,EAAcU,SAASc,EAAK5B,MAC3B,cAACuB,EAAA,EAAD,CACEC,QAAQ,UACRC,KAAK,SACLJ,UAAU,4BACVM,QAAS,kBAAM,EAAKtB,aAAauB,EAAK5B,OAJxC,oBASA,cAACuB,EAAA,EAAD,CACEC,QAAQ,UACRC,KAAK,SACLJ,UAAU,4BACVM,QAAS,kBAAM,EAAKf,aAAagB,EAAK5B,OAJxC,sBApBG4B,EAAK5B,kBAlFxB,GAAyB6B,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f3e0a730.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button } from 'react-bootstrap';\n\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Good } from './types/Good';\n\nimport goodsFromServer from './goods';\n\nfunction takeGoodsFromServer(goods: string[]): Good[] {\n  return goods.map((el: string) => ({ name: el }));\n}\n\ninterface State {\n  goods: Good[],\n  selectedGoods: string[],\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: takeGoodsFromServer(goodsFromServer),\n    selectedGoods: ['Jam'],\n  };\n\n  handleRemove = (name: string): void => {\n    this.setState((prevState) => {\n      const previousGood = [...prevState.selectedGoods];\n      const index = previousGood.indexOf(name);\n\n      if (index !== -1) {\n        previousGood.splice(index, 1);\n      }\n\n      return { selectedGoods: previousGood };\n    });\n  };\n\n  handleSelect = (name: string): void => {\n    this.setState((prevState) => {\n      const previousSelectedGoods = [...prevState.selectedGoods];\n\n      if (!previousSelectedGoods.includes(name)) {\n        previousSelectedGoods.push(name);\n      }\n\n      return { selectedGoods: previousSelectedGoods };\n    });\n  };\n\n  getSelectedGoods = (selected: string[]): string => {\n    switch (true) {\n      case selected.length > 3:\n        return `${selected[0]}, ${selected[1]} and ${selected.length - 2} others are selected`;\n\n      case selected.length === 3:\n        return `${selected[0]}, ${selected[1]} and ${selected[2]} are selected`;\n\n      case selected.length === 2:\n        return `${selected[0]} and ${selected[1]} are selected`;\n\n      case selected.length === 1:\n        return `${selected[0]} is selected`;\n\n      case selected.length === 0:\n        break;\n\n      default:\n        throw new Error('error in getSelectedGoods() function');\n    }\n\n    return 'No goods selected';\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {this.getSelectedGoods(selectedGoods)}\n          </h1>\n\n          {Boolean(selectedGoods.length) && (\n            <Button\n              variant=\"danger\"\n              type=\"button\"\n              className={classNames(\n                'App__clear',\n              )}\n              onClick={() => this.setState({ selectedGoods: [] })}\n            >\n              Clear\n            </Button>\n          )}\n        </header>\n\n        <ul className=\"Good-list\">\n          {goods.map(good => (\n            <li\n              key={good.name}\n              className={classNames(\n                'Good',\n                {\n                  'Good--active': selectedGoods.includes(good.name),\n                },\n              )}\n            >\n              {good.name}\n\n              {selectedGoods.includes(good.name) ? (\n                <Button\n                  variant=\"warning\"\n                  type=\"button\"\n                  className=\"Good__remove Good__button\"\n                  onClick={() => this.handleRemove(good.name)}\n                >\n                  Remove\n                </Button>\n              ) : (\n                <Button\n                  variant=\"warning\"\n                  type=\"button\"\n                  className=\"Good__select Good__button\"\n                  onClick={() => this.handleSelect(good.name)}\n                >\n                  Select\n                </Button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}